package edu.ufl.cise.plcsp23;

import org.junit.internal.builders.NullBuilder;

public class StringLitToken extends Token implements IStringLitToken  {
    private int col;
    private int line;

    public StringLitToken(int pos, int length, int line, int col, char[] source){
        super(Kind.STRING_LIT, pos, length, source);
        this.col = col;
        this.line = line;
    
    }

    @Override
    public String getValue() {
        String value = "";
        // TODO Auto-generated method stub

        /*
         * FIX: return source, but procesed to not include quotation marks or escape sequences
         * return a string generated by procesing a character array - the function for this is String.valueOf()
         */

         for(int i = pos+1; i<pos+length-1; i++){
            if(source[i] == '\\'){
                if(source[i+1] == 'b'){
                    value = value + '\b';
                    i++;
                }
                else if(source[i+1] == 't'){
                    value = value + '\t';
                    i++;
                }
                else if(source[i+1] == 'n'){
                    value = value + '\n';
                    i++;
                }
                else if(source[i+1] == 'f'){
                    value = value + '\f';
                    i++;
                }
                else if(source[i+1] == 'r'){
                    value = value + '\r';
                    i++;
                }
                else if(source[i+1] == '\"'){
                    value = value + '\"';
                    i++;
                }
                else if(source[i+1] == '\''){
                    value = value + '\'';
                    i++;
                }
                else if(source[i+1] == '\\'){
                    value = value + '\\';
                    i++;
                }
                else{
                    value = value + source[i];
                }
            }
            else{
                value = value + source[i];
            }
         }
        // String value = String.valueOf(source);
        // value = value.substring(pos+1, (pos+1)+(length-2));
        // return value;
        return value;
    }

    @Override
    public SourceLocation getSourceLocation() {
        // TODO Auto-generated method stub
        return new SourceLocation(line, col);
    }

    @Override
    public Kind getKind() {
        // TODO Auto-generated method stub
        return kind;
    }

    @Override
    public String getTokenString() {
        // TODO Auto-generated method stub
        String withQoutes = String.valueOf(source);
        withQoutes = withQoutes.substring(pos, (pos)+(length));

    return withQoutes;
    }
}